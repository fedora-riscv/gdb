Index: gdb-7.2.50.20110320/gdb/breakpoint.c
===================================================================
--- gdb-7.2.50.20110320.orig/gdb/breakpoint.c	2011-03-20 15:17:42.000000000 +0100
+++ gdb-7.2.50.20110320/gdb/breakpoint.c	2011-03-20 15:28:48.000000000 +0100
@@ -10678,6 +10678,50 @@ update_breakpoint_locations (struct brea
   update_global_location_list (1);
 }
 
+void
+breakpoints_relocate (struct objfile *objfile, struct section_offsets *delta)
+{
+  struct bp_location *bl, **blp_tmp;
+  int changed = 0;
+
+  gdb_assert (objfile->separate_debug_objfile_backlink == NULL);
+
+  ALL_BP_LOCATIONS (bl, blp_tmp)
+    {
+      struct obj_section *osect;
+
+      /* BL->SECTION can be correctly NULL for breakpoints with multiple
+         locations expanded through symtab.  */
+
+      ALL_OBJFILE_OSECTIONS (objfile, osect)
+	{
+	  CORE_ADDR relocated_address;
+	  CORE_ADDR delta_offset;
+
+	  delta_offset = ANOFFSET (delta, osect->the_bfd_section->index);
+	  if (delta_offset == 0)
+	    continue;
+	  relocated_address = bl->address + delta_offset;
+
+	  if (obj_section_addr (osect) <= relocated_address
+	      && relocated_address < obj_section_endaddr (osect))
+	    {
+	      if (bl->inserted)
+		remove_breakpoint (bl, mark_uninserted);
+
+	      bl->address += delta_offset;
+	      bl->requested_address += delta_offset;
+
+	      changed = 1;
+	    }
+	}
+    }
+
+  if (changed)
+    qsort (bp_location, bp_location_count, sizeof (*bp_location),
+	   bp_location_compare);
+}
+
 /* Reset a breakpoint given it's struct breakpoint * BINT.
    The value we return ends up being the return value from catch_errors.
    Unused in this case.  */
Index: gdb-7.2.50.20110320/gdb/breakpoint.h
===================================================================
--- gdb-7.2.50.20110320.orig/gdb/breakpoint.h	2011-03-20 15:17:42.000000000 +0100
+++ gdb-7.2.50.20110320/gdb/breakpoint.h	2011-03-20 15:29:33.000000000 +0100
@@ -1210,4 +1210,7 @@ extern struct breakpoint *iterate_over_b
 
 extern int user_breakpoint_p (struct breakpoint *);
 
+extern void breakpoints_relocate (struct objfile *objfile,
+				  struct section_offsets *delta);
+
 #endif /* !defined (BREAKPOINT_H) */
Index: gdb-7.2.50.20110320/gdb/objfiles.c
===================================================================
--- gdb-7.2.50.20110320.orig/gdb/objfiles.c	2011-03-20 15:17:42.000000000 +0100
+++ gdb-7.2.50.20110320/gdb/objfiles.c	2011-03-20 15:29:05.000000000 +0100
@@ -851,6 +851,11 @@ objfile_relocate1 (struct objfile *objfi
     objfile->sf->sym_probe_fns->sym_relocate_probe (objfile,
 						    new_offsets, delta);
 
+  /* Final call of breakpoint_re_set can keep breakpoint locations disabled if
+     their addresses match.  */
+  if (objfile->separate_debug_objfile_backlink == NULL)
+    breakpoints_relocate (objfile, delta);
+
   /* Data changed.  */
   return 1;
 }
