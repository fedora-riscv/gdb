http://sourceware.org/ml/gdb-cvs/2010-08/msg00167.html

### src/gdb/ChangeLog	2010/08/26 16:47:54	1.12117
### src/gdb/ChangeLog	2010/08/26 19:47:22	1.12118
## -1,3 +1,7 @@
+2010-08-26  Pedro Alves  <pedro@codesourcery.com>
+
+	* NEWS: Mention libthread_db debugging with core files.
+
 2010-08-26  Doug Evans  <dje@google.com>
 
 	* dwarf2read.c (dwarf2_build_include_psymtabs): Remove unnecessary
Index: gdb-7.2/gdb/NEWS
===================================================================
--- gdb-7.2.orig/gdb/NEWS	2010-09-03 01:37:25.000000000 +0200
+++ gdb-7.2/gdb/NEWS	2011-01-30 19:32:06.000000000 +0100
@@ -1,6 +1,33 @@
 		What has changed in GDB?
 	     (Organized release by release)
 
+*** Changes since GDB 7.2
+
+* GDB now supports thread debugging of core dumps on GNU/Linux.
+
+  GDB now activates thread debugging using the libthread_db library
+  when debugging GNU/Linux core dumps, similarly to when debugging
+  live processes.  As a result, when debugging a core dump file, GDB
+  is now able to display pthread_t ids of threads.  For example, "info
+  threads" shows the same output as when debugging the process when it
+  was live.  In earlier releases, you'd see something like this:
+
+  (gdb) info threads
+   * 1 LWP 6780  main () at main.c:10
+
+  While now you see this:
+
+  (gdb) info threads
+   * 1 Thread 0x7f0f5712a700 (LWP 6780)  main () at main.c:10
+
+  It is also now possible to inspect TLS variables when debugging core
+  dumps.
+
+  When debugging a core dump generated on a machine other than the one
+  used to run GDB, you may need to point GDB at the correct
+  libthread_db library with the "set libthread-db-search-path"
+  command.  See the user manual for more details on this command.
+
 *** Changes in GDB 7.2
 
 * Shared library support for remote targets by default
