http://sourceware.org/ml/gdb-cvs/2010-09/msg00070.html

### src/gdb/testsuite/ChangeLog	2010/09/08 23:41:39	1.2442
### src/gdb/testsuite/ChangeLog	2010/09/09 20:00:48	1.2443
## -1,3 +1,8 @@
+2010-09-09  Jan Kratochvil  <jan.kratochvil@redhat.com>
+
+	* gdb.base/break-interp.exp (reach): Permit leading . for ppc64.
+	(test_ld) <powerpc64-*>: New.
+
 2010-09-08  Daniel Jacobowitz  <dan@codesourcery.com>
 
 	* gdb.cp/templates.exp (test_template_args): Allow "struct".
--- src/gdb/testsuite/gdb.base/break-interp.exp	2010/07/05 18:04:33	1.18
+++ src/gdb/testsuite/gdb.base/break-interp.exp	2010/09/09 20:00:49	1.19
@@ -136,10 +136,10 @@
 		}
 		exp_continue
 	    }
-	    -re "Breakpoint \[0-9\]+, $func \\(.*\\) at .*:\[0-9\]+\r\n.*$gdb_prompt $" {
+	    -re "Breakpoint \[0-9\]+, \\.?$func \\(.*\\) at .*:\[0-9\]+\r\n.*$gdb_prompt $" {
 		pass $test
 	    }
-	    -re "Breakpoint \[0-9\]+, \[0-9xa-f\]+ in $func \\(\\).*\r\n$gdb_prompt $" {
+	    -re "Breakpoint \[0-9\]+, \[0-9xa-f\]+ in \\.?$func \\(\\).*\r\n$gdb_prompt $" {
 		pass $test
 	    }
 	}
@@ -399,6 +399,17 @@
 		pass $test
 	    }
 	}
+	# `info sym' cannot be tested for .opd as the binary may not have
+	# symbols.
+	if [istarget powerpc64-*] {
+	    set test "convert entry point"
+	    gdb_test_multiple "p *(void(*)(void) *) 0x$entrynohex" $test {
+		-re " =( \\(\[^0-9\]*\\))? 0x(\[0-9a-f\]+)( < \[^\r\n\]*)?\r\n$gdb_prompt $" {
+		    set entrynohex $expect_out(2,string)
+		    pass $test
+		}
+	    }
+	}
 	if {$entrynohex != ""} {
 	    gdb_test "break *0x$entrynohex" "" "break at entry point"
 	    gdb_test "continue" "\r\nBreakpoint \[0-9\]+, 0x0*$entrynohex in .*" "entry point reached"
