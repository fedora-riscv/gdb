http://sourceware.org/ml/gdb-patches/2015-01/msg00110.html
Subject: [testsuite patch] Fix new FAIL: py-frame.exp: test Frame.read_register(rip)


--/04w6evG8XlLl3ft
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline

Hi,

for x86_64 -m32 run one gets:

+FAIL: gdb.python/py-frame.exp: test Frame.read_register(rip)

I do not have x32 OS here but the %rip test should PASS there I think.

OK for check-in?

The code is there since:
	commit 5f3b99cfed3803f0b099152f54aac7cb90a2b926
	Author: Sasha Smundak <asmundak@google.com>
	Date:   Wed Sep 3 16:34:47 2014 -0700
	    Add support for reading frame registers to Python API.


Jan

--/04w6evG8XlLl3ft
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline; filename=1

gdb/testsuite/
2015-01-07  Jan Kratochvil  <jan.kratochvil@redhat.com>

	* gdb.python/py-frame.exp (test Frame.read_register(rip)): Use
	is_amd64_regs_target.

diff --git a/gdb/testsuite/gdb.python/py-frame.exp b/gdb/testsuite/gdb.python/py-frame.exp
index bf2e1ce..984acfc 100644
--- a/gdb/testsuite/gdb.python/py-frame.exp
+++ b/gdb/testsuite/gdb.python/py-frame.exp
@@ -106,7 +106,7 @@ gdb_test "python print ('result = %s' % (f0.read_register('pc') == f0.pc()))" \
   "test Frame.read_register(pc)"
 
 # On x86-64, PC is in $rip register.
-if {[istarget x86_64-*]} {
+if {[is_amd64_regs_target]} {
     gdb_test "python print ('result = %s' % (f0.read_register('pc') == f0.read_register('rip')))" \
 	" = True" \
 	"test Frame.read_register(rip)"

--/04w6evG8XlLl3ft--

