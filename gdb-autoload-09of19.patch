http://sourceware.org/ml/gdb-cvs/2012-01/msg00205.html

--- src/gdb/gdb_vecs.h
+++ src/gdb/gdb_vecs.h	2012-04-17 22:04:23.818666000 +0000
@@ -0,0 +1,28 @@
+/* Some commonly-used VEC types.
+
+   Copyright (C) 2012 Free Software Foundation, Inc.
+
+   This file is part of GDB.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+
+
+#ifndef GDB_VECS_H
+#define GDB_VECS_H
+
+#include "vec.h"
+
+DEF_VEC_P (char_ptr);
+
+#endif /* GDB_VECS_H */
### src/gdb/ChangeLog	2012/01/24 21:32:56	1.13774
### src/gdb/ChangeLog	2012/01/24 21:36:37	1.13775
## -1,3 +1,10 @@
+2012-01-24  Tom Tromey  <tromey@redhat.com>
+
+	* ada-lang.c: Include gdb_vecs.h.
+	* charset.c: Include gdb_vecs.h.
+	* tracepoint.h: Include gdb_vecs.h.
+	* gdb_vecs.h: New file.
+
 2012-01-24  Pedro Alves  <pedro@codesourcery.com>
 
 	* breakpoint.c (breakpoint_hit_catch_fork)
--- src/gdb/ada-lang.c	2012/01/06 03:34:45	1.330
+++ src/gdb/ada-lang.c	2012/01/24 21:36:37	1.331
@@ -57,6 +57,7 @@
 #include "observer.h"
 #include "vec.h"
 #include "stack.h"
+#include "gdb_vecs.h"
 
 #include "psymtab.h"
 #include "value.h"
@@ -5628,8 +5629,6 @@
   return sym_name;
 }
 
-DEF_VEC_P (char_ptr);
-
 /* A companion function to ada_make_symbol_completion_list().
    Check if SYM_NAME represents a symbol which name would be suitable
    to complete TEXT (TEXT_LEN is the length of TEXT), in which case
--- src/gdb/charset.c	2012/01/04 08:17:00	1.46
+++ src/gdb/charset.c	2012/01/24 21:36:37	1.47
@@ -27,6 +27,7 @@
 #include "vec.h"
 #include "environ.h"
 #include "arch-utils.h"
+#include "gdb_vecs.h"
 
 #include <stddef.h>
 #include "gdb_string.h"
@@ -717,8 +718,6 @@
 
 extern initialize_file_ftype _initialize_charset; /* -Wmissing-prototype */
 
-DEF_VEC_P (char_ptr);
-
 static VEC (char_ptr) *charsets;
 
 #ifdef PHONY_ICONV
--- src/gdb/tracepoint.h	2012/01/04 08:27:57	1.46
+++ src/gdb/tracepoint.h	2012/01/24 21:36:37	1.47
@@ -22,6 +22,7 @@
 #include "breakpoint.h"
 #include "target.h"
 #include "memrange.h"
+#include "gdb_vecs.h"
 
 /* A trace state variable is a value managed by a target being
    traced.  A trace state variable (or tsv for short) can be accessed
@@ -143,8 +144,6 @@
 
 /* Struct to collect random info about tracepoints on the target.  */
 
-DEF_VEC_P (char_ptr);
-
 struct uploaded_tp
 {
   int number;
