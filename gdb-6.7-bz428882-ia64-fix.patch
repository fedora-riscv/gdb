diff -up gdb-6.7.1/gdb/ia64-tdep.c.broken gdb-6.7.1/gdb/ia64-tdep.c
--- gdb-6.7.1/gdb/ia64-tdep.c.broken	2008-01-15 15:13:54.558100457 -0500
+++ gdb-6.7.1/gdb/ia64-tdep.c	2008-01-15 15:14:23.701740030 -0500
@@ -2009,6 +2009,7 @@ ia64_sigtramp_frame_prev_register (struc
 {
   char dummy_valp[MAX_REGISTER_SIZE];
   char buf[MAX_REGISTER_SIZE];
+  int nat_bit;
 
   struct ia64_frame_cache *cache =
     ia64_sigtramp_frame_cache (next_frame, this_cache);
@@ -2088,7 +2089,6 @@ ia64_sigtramp_frame_prev_register (struc
 	  /* Compute address of nat collection bits */
 	  CORE_ADDR nat_collection;
 	  nat_addr = gr_addr | 0x1f8;
-	  int nat_bit;
 	  /* If our nat collection address is bigger than bsp, we have to get
 	     the nat collection from rnat.  Otherwise, we fetch the nat
 	     collection from the computed address. FIXME: Do not know if
diff -up gdb-6.7.1/gdb/libunwind-frame.c.broken gdb-6.7.1/gdb/libunwind-frame.c
--- gdb-6.7.1/gdb/libunwind-frame.c.broken	2008-01-15 15:39:32.341093035 -0500
+++ gdb-6.7.1/gdb/libunwind-frame.c	2008-01-15 15:48:25.254244213 -0500
@@ -133,7 +133,7 @@ static struct libunwind_frame_cache *
 libunwind_frame_cache (struct frame_info *next_frame, void **this_cache)
 {
   unw_accessors_t *acc;
-  unw_addr_space_t as;
+  unw_addr_space_t as = NULL;
   unw_cursor_t *cursor_addr;
   unw_word_t fp, sp;
   unw_regnum_t uw_sp_regnum;
diff -up gdb-6.7.1/gdb/ia64-linux-nat.c.broken gdb-6.7.1/gdb/ia64-linux-nat.c
--- gdb-6.7.1/gdb/ia64-linux-nat.c.broken	2008-01-15 15:23:11.933209405 -0500
+++ gdb-6.7.1/gdb/ia64-linux-nat.c	2008-01-15 15:38:42.846709176 -0500
@@ -661,7 +661,7 @@ ia64_linux_remove_watchpoint_callback (s
   struct linux_watchpoint *args = (struct linux_watchpoint *)data;
 
   return ia64_linux_remove_one_watchpoint (lwp->ptid, args->addr,
-		 		     	   args->len);
+		 		     	   args->len, args->type);
 }
 
 /* TO_FOLLOW_FORK stores here the PID under DETACH_BREAKPOINTS for the child
@@ -672,7 +672,7 @@ static int ia64_linux_detach_breakpoints
 
 /* Remove a watchpoint for all threads.  */
 static int
-ia64_linux_remove_watchpoint (CORE_ADDR addr, int len)
+ia64_linux_remove_watchpoint (CORE_ADDR addr, int len, int rw)
 {
   struct linux_watchpoint args;
 
@@ -925,7 +925,7 @@ ia64_linux_save_sigtrap_info (void *queu
   if (lp->saved_trap_data == NULL)
     lp->saved_trap_data = xmalloc (sizeof(struct siginfo));
 
-  ptrace (PTRACE_GETSIGINFO, ptid_get_lwp (lp->ptid), (PTRACE_ARG3_TYPE) 0,
+  ptrace (PTRACE_GETSIGINFO, ptid_get_lwp (lp->ptid), (PTRACE_TYPE_ARG3) 0,
           lp->saved_trap_data);
 }
 
